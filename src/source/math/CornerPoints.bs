namespace BGE.Math


  class CornerPoints

    topLeft as Vector = new Vector()
    topRight as Vector = new Vector()

    bottomLeft as Vector = new Vector()
    bottomRight as Vector = new Vector()


    function getPointsArray() as Vector[]
      return [m.topLeft, m.topRight, m.bottomLeft, m.bottomRight]
    end function

    sub setPointByIndex(index as integer, newValue as Vector)
      m.getPointsArray()[index].setFrom(newValue)
    end sub

    function getAvgXDelta() as float
      topXDelta = m.topRight.x - m.topLeft.x
      bottomXDelta = m.bottomRight.x - m.bottomLeft.x
      return average(topXDelta, bottomXDelta)
    end function


    function getAvgYDelta() as float
      leftYDelta = m.topLeft.y - m.bottomLeft.y
      rightYDelta = m.topRight.y - m.bottomRight.y
      return average(leftYDelta, rightYDelta)
    end function

    function getAvgRotation() as float
      angles = [
        GetAngle(m.topLeft, m.topRight),
        getAngle(m.topRight, m.bottomRight),
        GetAngle(m.bottomRight, m.bottomLeft),
        GetAngle(m.bottomLeft, m.topLeft)
      ]
      return arrayAverage(angles)
    end function

    function toStr() as string
      return `[${m.topLeft.toStr()}, ${m.topRight.toStr()},\n ${m.bottomLeft.toStr()}, ${m.bottomRight.toStr()}]`
    end function

  end class
end namespace