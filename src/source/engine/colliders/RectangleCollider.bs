' @module BGE
namespace BGE

  ' Collider with the shape of a rectangle with top left at (offset.x, offset.y), with given width and height
  class RectangleCollider extends Collider
    width as float = 0.0
    height as float = 0.0


    ' Create a new RectangleCollider
    '
    ' @param {string} colliderName - name of this collider
    ' @param {object} [args={}] - additional properties (e.g {width: 10, height: 20})
    sub new (colliderName as string, args = {} as object)
      super(colliderName, args)
      m.colliderType = "rectangle"
      m.append(args)
    end sub

    ' Refreshes the collider
    '
    override sub refreshColliderRegion()
      region = m.compositorObject.GetRegion()
      region.SetCollisionType(1)
      region.SetCollisionRectangle(m.offset.x, -m.offset.y, m.width, m.height)
    end sub


    ' Draws the rectangle outline around the collider
    override sub debugDraw(renderObj as Renderer, position as BGE.Math.Vector, color = &hFF0000FF as integer, addName = false as boolean, font = invalid)
      offsetPosition = renderObj.worldPointToCanvasPoint(position.add(m.offset))
      renderObj.DrawRectangleOutline(offsetPosition.x, offsetPosition.y, m.width, m.height, color)
      if addName
        textOffset = 10
        renderObj.drawText(m.name, offsetPosition.x + textOffset, offsetPosition.y + textOffset, color, font)
      end if
    end sub

  end class
end namespace
