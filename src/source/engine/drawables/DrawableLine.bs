' @module BGE
namespace BGE

  class DrawableLine extends Drawable

    protected startPosition as BGE.Math.Vector = new BGE.Math.Vector()
    protected endPosition as BGE.Math.Vector = new BGE.Math.Vector()

    sub new(owner as GameEntity, canvasBitmap as ifDraw2d, startPos as BGE.Math.Vector, endPos as BGE.Math.Vector, args = {})
      super(owner, canvasBitmap, args)
      m.startPosition = startPos
      m.endPosition = endPos
      m.append(args)
    end sub

    override sub draw(additionalRotation = invalid as BGE.Math.Vector)
      if not m.enabled
        return
      end if
      rgba = m.getFillColorRGBA()
      'TODO: maybe deal with offset here?
      m.drawTo.DrawLine(m.startPosition.x, m.startPosition.y, m.endPosition.x, m.endPosition.y, rgba)
    end sub

    override sub addToScene(renderer as Renderer)
      m.addSceneObjectToRenderer(new SceneObjectLine(m.getSceneObjectName("line"), m), renderer)
    end sub


  end class

end namespace