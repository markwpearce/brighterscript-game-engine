class MainRoom extends BGE.Room

  game_started = false
  ball_spawn_timer = invalid 'CreateObject("roTimespan")
  ball_direction = -1
  ball = invalid

  sub new(game)
    super(game)
    m.name = "MainRoom"
  end sub

  override sub onCreate(args)
    m.game.addEntity(new Player(m.game))
    m.game.addEntity(new Computer(m.game))
    m.game.addEntity(new PauseHandler(m.game))
    m.game.addEntity(new ScoreHandler(m.game))

    m.game_started = true
    m.ball_spawn_timer = CreateObject("roTimespan")
    m.ball_direction = -1
    m.ball = invalid
  end sub

  override sub onUpdate(dt)
    if m.game_started and not BGE.isValidEntity(m.ball) and m.ball_spawn_timer.TotalMilliseconds() > 1000
      m.ball = m.game.addEntity(new Ball(m.game), {direction: m.ball_direction})
    end if
  end sub

  override sub onDrawBegin(renderer as BGE.Renderer, uiRenderer as BGE.Renderer)
    offset = 50

    screenSize = uiRenderer.getCanvasSize()
    center = uiRenderer.getCanvasSize()

    uiRenderer.drawRectangle(0, 0, screenSize.x, offset, &hFFFFFFFF)
    uiRenderer.drawRectangle(0, screenSize.y - offset, m.game.screen.getWidth(), offset, &hFFFFFFFF)
    if not m.game_started
      uiRenderer.drawText("Press OK To Play", center.x, center.y - 20, BGE.Colors().White, m.game.getFont("default"), "center")
    end if
  end sub

  override sub onInput(input)
    if input.isButton("back")
      m.game.End()
    end if
    if not m.game_started and input.isButton("ok")
      m.game_started = true
    end if
  end sub

  override sub onGameEvent(event as string, data as object)
    if event = "score"
      if data.team = 0
        m.ball_direction = -1
      else
        m.ball_direction = 1
      end if
      m.ball = invalid
      m.ball_spawn_timer.Mark()
    end if
  end sub

end class
