sub Main()

  testObjectCreation()

  game = new BGE.Game(1280, 720) ' This initializes the game engine
  game.loadBitmap("rocket", "pkg:/sprites/rocket_off.png")
  game.loadBitmap("rocket_on", "pkg:/sprites/rocket_on.png")
  game.loadBitmap("rock", "pkg:/sprites/rock_a.png")
  game.loadBitmap("boom", "pkg:/sprites/boom3.png")
  game.loadBitmap("background", "pkg:/sprites/spacebackground.jpg")
  game.loadSound("die", "pkg:/sounds/big_explosion_3.wav")
  game.loadSound("laser", "pkg:/sounds/laser.wav")

  game.loadSound("engine", "pkg:/sounds/engine.wav")
  for i = 1 to 9
    explosionSoundName = "explosion0" + stri(i).trim()
    game.loadSound(explosionSoundName, `pkg:/sounds/explosions/${explosionSoundName}.wav`)
  end for

  main_room = new MainRoom(game)
  game.defineRoom(main_room)
  game.changeRoom(main_room.name)
  game.getDebugUI().addChild(new BGE.Debug.FpsDisplay(game))
  game.getDebugUI().addChild(new BGE.Debug.InputDisplay(game))

  game.getDebugUI().addChild(new BGE.Debug.MemoryDisplay(game))
  game.getDebugUI().addChild(new BGE.Debug.GarbageCollectorDisplay(game))
  'game.debugDrawColliders(false)
  'game.debugDrawEntityDetails(true)
  'game.debugDrawSafeZones(true)
  'game.debugShowUi(true)

  use3d = false
  if use3d
    game.setCamera(new BGE.Camera3d())
    frameCenter = game.canvas.renderer.getCanvasCenter()
    game.canvas.renderer.camera.position.x = frameCenter.x
    game.canvas.renderer.camera.position.y = frameCenter.y
    game.canvas.renderer.camera.setTarget(frameCenter)
  end if

  game.Play()

end sub




sub testObjectCreation()
  timer = CreateObject("roTimespan") as roTimespan
  testRuns = 10000

  timer.Mark()
  ? `Creating ${testRuns} BGE.Math.Matrix44`
  for i = 0 to testRuns
    matrix = BGE.Math.Matrix44.create([
      [0, 0, 0, 0],
      [0, 0, 0, 0],
      [0, 0, 0, 0],
      [0, 0, 0, 0],
    ])
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  timer.Mark()
  ? `Creating ${testRuns} float[][]`
  for i = 0 to testRuns
    matrix = [
      [0, 0, 0, 0],
      [0, 0, 0, 0],
      [0, 0, 0, 0],
      [0, 0, 0, 0],
    ]
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  timer.Mark()
  ? `Creating ${testRuns} dim [][]`
  for i = 0 to testRuns
    dim matrix [3, 3]
    matrix[0][0] = 0
    matrix[0][1] = 0
    matrix[0][2] = 0
    matrix[0][3] = 0
    matrix[1][0] = 0
    matrix[1][1] = 0
    matrix[1][2] = 0
    matrix[1][3] = 0
    matrix[2][0] = 0
    matrix[2][1] = 0
    matrix[2][2] = 0
    matrix[2][3] = 0
    matrix[3][0] = 0
    matrix[3][1] = 0
    matrix[3][2] = 0
    matrix[3][3] = 0
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  timer.Mark()
  ? `Creating ${testRuns} BGE.Math.Vector`
  for i = 0 to testRuns
    vector = BGE.Math.VectorOps.create()
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  timer.Mark()
  ? `Creating ${testRuns} {x, y, z}`
  for i = 0 to testRuns
    vector = {x: 0, y: 0, z: 0}
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  timer.Mark()
  ? `Creating ${testRuns} [x, y, z]`
  for i = 0 to testRuns
    vector = [0, 0, 0]
  end for
  ? `Time: ${timer.TotalMilliseconds()}`

  sleep(10)
end sub