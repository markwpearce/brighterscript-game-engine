class LineTree extends BGE.GameEntity

  size = 100
  complexity = 10
  lines as BGE.DrawableLine[] = []

  doRotation = false


  sub new(game)
    super(game)
    m.name = "LineTree"
  end sub


  override sub onCreate(args)
    if invalid <> args.size
      m.size = args.size
    end if
    m.rotation.y = rnd(0)
    top = m.size
    bottom = top / 3

    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, top, 0), BGE.ColorsRGB().Maroon)

    for i = 1 to m.complexity
      theta = (BGE.Math.PI() * 2 * i) / m.complexity
      m.addLineDrawable(new BGE.Math.Vector(cos(theta) * bottom, bottom, sin(theta) * bottom), new BGE.Math.Vector(0, top, 0), BGE.ColorsRGB().Green)
    end for

  end sub

  override sub onUpdate(deltaTime as float)
    if m.doRotation
      m.rotation.y += deltaTime
    end if
  end sub


  private sub addLineDrawable(startPos as BGE.Math.Vector, endPos as BGE.Math.Vector, color as integer)
    lineName = "line_" + m.lines.count().toStr().trim()
    lineObj = new BGE.DrawableLine(m, m.game.getCanvas(), startPos, endPos)
    lineObj.color = color
    m.lines.push(lineObj)
    m.addImageObject(lineName, lineObj)
  end sub

  override sub onInput(input)
    if input.press
      if input.isButton("ok")
        m.doRotation = not m.doRotation
      end if
    end if
  end sub

end class
