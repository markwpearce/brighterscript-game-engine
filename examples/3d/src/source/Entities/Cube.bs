class Cube extends BGE.GameEntity

  speed = 1
  size = 100
  lines as BGE.DrawableLine[] = []

  function new(game) as void
    super(game)
    m.name = "Cube"
  end function


  override function onCreate(args)
    if invalid <> args.Speed
      m.speed = args.speed
    end if
    if invalid <> args.size
      m.size = args.size
    end if

    ' m.rotation.y = 2
    'm.rotation.z = 1
    s = m.size

    'SQUARE
    'm.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(s, 0, 0), BGE.ColorsRGB().White)
    'm.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, s, 0), BGE.ColorsRGB().White)
    'm.addLineDrawable(new BGE.Math.Vector(s, 0, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().White)
    'm.addLineDrawable(new BGE.Math.Vector(0, s, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().White)

    'CUBE
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(s, 0, 0), BGE.ColorsRGB().White)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, s, 0), BGE.ColorsRGB().Red)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, 0, s), BGE.ColorsRGB().Lime)

    m.addLineDrawable(new BGE.Math.Vector(s, 0, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Blue)
    m.addLineDrawable(new BGE.Math.Vector(s, 0, 0), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Yellow)

    m.addLineDrawable(new BGE.Math.Vector(0, s, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Cyan)
    m.addLineDrawable(new BGE.Math.Vector(0, s, 0), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Aqua)

    m.addLineDrawable(new BGE.Math.Vector(0, 0, s), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Magenta)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, s), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Silver)

    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Maroon)
    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Olive)
    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Green)
  end function

  override function onUpdate(deltaTime as float)
    m.rotation.y += deltaTime * m.speed
    m.rotation.x += deltaTime * m.speed
    'm.rotation.z += deltaTime * m.speed

    '?"rotation "; m.rotation.toStr()
  end function


  private sub addLineDrawable(startPos as BGE.Math.Vector, endPos as BGE.Math.Vector, color as integer)
    lineName = "line_" + m.lines.count().toStr().trim()
    lineObj = new BGE.DrawableLine(m, m.game.getCanvas(), startPos, endPos)
    lineObj.color = color
    m.lines.push(lineObj)
    m.addImageObject(lineName, lineObj)
  end sub

end class
