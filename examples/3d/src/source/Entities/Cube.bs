class Cube extends BGE.GameEntity

  speed = 1
  size = 200
  lines as BGE.DrawableLine[] = []

  doRotation = true

  sub new(game)
    super(game)
    m.name = "Cube"
  end sub


  override sub onCreate(args)
    if invalid <> args.Speed
      m.speed = args.speed
    end if
    if invalid <> args.size
      m.size = args.size
    end if

    s = m.size

    'CUBE
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(s, 0, 0), BGE.ColorsRGB().White)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, s, 0), BGE.ColorsRGB().Red)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, 0), new BGE.Math.Vector(0, 0, s), BGE.ColorsRGB().Lime)

    m.addLineDrawable(new BGE.Math.Vector(s, 0, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Blue)
    m.addLineDrawable(new BGE.Math.Vector(s, 0, 0), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Yellow)

    m.addLineDrawable(new BGE.Math.Vector(0, s, 0), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Cyan)
    m.addLineDrawable(new BGE.Math.Vector(0, s, 0), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Aqua)

    m.addLineDrawable(new BGE.Math.Vector(0, 0, s), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Magenta)
    m.addLineDrawable(new BGE.Math.Vector(0, 0, s), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Silver)

    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(s, s, 0), BGE.ColorsRGB().Maroon)
    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(0, s, s), BGE.ColorsRGB().Olive)
    m.addLineDrawable(new BGE.Math.Vector(s, s, s), new BGE.Math.Vector(s, 0, s), BGE.ColorsRGB().Green)
  end sub

  override sub onUpdate(deltaTime as float)

    if m.doRotation
      m.rotation.y += deltaTime * m.speed
      m.rotation.x += deltaTime * m.speed
    end if
  end sub


  private sub addLineDrawable(startPos as BGE.Math.Vector, endPos as BGE.Math.Vector, color as integer)
    lineName = "line_" + m.lines.count().toStr().trim()
    lineObj = new BGE.DrawableLine(m, m.game.getCanvas(), startPos, endPos)
    lineObj.color = color
    m.lines.push(lineObj)
    m.addImageObject(lineName, lineObj)
  end sub

  override sub onInput(input)
    if input.press
      if input.isButton("ok")
        m.doRotation = not m.doRotation
      end if
    end if
  end sub

end class
