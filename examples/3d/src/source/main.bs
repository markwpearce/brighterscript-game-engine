sub Main()


  'testRender()
  'return





  game = new BGE.Game(1280, 720, true) ' This initializes the game engine

  game.loadBitmap("roku", "pkg:/sprites/roku-logo-purple.png")

  cubes_room = new CubesRoom(game)
  game.defineRoom(cubes_room)

  trees_room = new TreesRoom(game)
  game.defineRoom(trees_room)

  images_room = new ImagesRoom(game)
  game.defineRoom(images_room)

  game.changeRoom(getRoomNames()[0])

  game.getDebugUI().addChild(new BGE.Debug.FpsDisplay(game))
  game.getDebugUI().addChild(new BGE.Debug.InputDisplay(game))

  game.getDebugUI().addChild(new BGE.Debug.MemoryDisplay(game))
  game.getDebugUI().addChild(new BGE.Debug.GarbageCollectorDisplay(game))
  game.debugDrawColliders(true)
  ' game.debugDrawSafeZones(true)
  game.debugShowUi(true)
  game.Play()

  ' vscode_rale_tracker_entry
end sub

function getRoomNames()
  return ["ImagesRoom", "TreesRoom", "CubesRoom"]
end function


sub goToNextRoom(currentRoom as BGE.Room, direction as integer)

  currentIndex = 0
  i = 0
  roomNames = getRoomNames()
  for each name in roomNames
    if currentRoom.name = name
      currentIndex = i
      exit for
    end if
    i++
  end for

  nextIndex = currentIndex + direction

  if nextIndex >= roomNames.count()
    nextIndex = 0
  else if nextIndex < 0
    nextIndex = roomNames.count() - 1
  end if

  currentRoom.game.changeRoom(roomNames[nextIndex])
end sub



sub testRender()
  game = new BGE.Game(1280, 720, true) ' This initializes the game engine
  game.loadBitmap("roku", "pkg:/sprites/roku-logo-purple.png")
  rokuBitmap = game.getBitmap("roku")
  rokuBitmapRegion = CreateObject("roRegion", rokuBitmap, 0, 0, rokuBitmap.getWidth(), rokuBitmap.getHeight())
  game.canvas.clear(0)
  srcPoints = [
    new BGE.Math.Vector(0, 0),
    new BGE.Math.Vector(300, 0),
    new BGE.Math.Vector(400, 400)
  ]


  destPoints = [
    new BGE.Math.Vector(700, 100),
    new BGE.Math.Vector(1000, 300),
    new BGE.Math.Vector(1100, 700)
  ]

  game.canvas.renderer.drawBitmapTriangleTo(game.canvas.renderer.draw2d, rokuBitmapRegion, srcPoints, destPoints)
  ?"Draw Calls: ";game.canvas.renderer.drawCallsLastFrame


  ' triangle = game.canvas.renderer.makeIntoTriangle(rokuBitmapRegion, points)
  ' game.canvas.renderer.drawObject(300, 300, triangle.bitmap)
  ' ?"Draw Calls: ";game.canvas.renderer.drawCallsLastFrame

  ' game.canvas.renderer.drawObject(700, 300, rokuBitmap)


  ' game.canvas.renderer.drawSquare(700 + points[0].x, 300 + points[0].y, 4, BGE.Colors().Red)
  ' game.canvas.renderer.drawSquare(700 + points[1].x, 300 + points[1].y, 4, BGE.Colors().Green)
  ' game.canvas.renderer.drawSquare(700 + points[2].x, 300 + points[2].y, 4, BGE.Colors().Blue)




  game.canvas.renderer.drawSquare(destPoints[0].x, destPoints[0].y, 4, BGE.Colors().Red)
  game.canvas.renderer.drawSquare(destPoints[1].x, destPoints[1].y, 4, BGE.Colors().Green)
  game.canvas.renderer.drawSquare(destPoints[2].x, destPoints[2].y, 4, BGE.Colors().Blue)


  game.screen.swapBuffers()

  sleep(1)


end sub