namespace BGE.Math
    enum WindingDirection
        clockwise = 0
        counterclockwise = 1
    end enum
    class Triangle
        public lengths as object
        public angles as object
        public anglesToNext as object
        public anglesToPrevious as object
        public points as object
        public longestIndex as integer
        public height as float
        public winding as dynamic
        public angleRotatedFromOriginal as float
        '
        '
        ' @param {BGE.Math.Vector[]} points Array of points in counter clockwise winding (i.e. follows right-hand-rule)
        sub new(points as object, rearrangeToLongestFirst = false as boolean)
        end sub
        sub setPoints(points as object, rearrangeToLongestFirst = false as boolean)
        end sub
        function getLongestSide() as float
        end function
        function isObtuse() as boolean
        end function
        function isAcute() as boolean
        end function
        function getOriginIndex() as integer
        end function
        function getHeightByTangentIndex(tangentIndex) as float
        end function
        function nextIndex(currentIndex as integer) as integer
        end function
        function previousIndex(currentIndex as integer) as integer
        end function
        function toStr() as string
        end function
    end class
end namespace
