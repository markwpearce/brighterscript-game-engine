' @module BGE
namespace BGE
    class DrawablePolygon extends BGE.DrawableWithOutline
        ' the set of points defining a convex polygon
        public points as object
        ' The number of frames before the polygon is completely finished
        public drawLevels as integer
        ' Draw mode for the polygon, bitmask of:
        '  1 wireframe (just edges of triangles)
        '  2 fill (render with rectangles)
        '  4 rays (render with rays)
        public drawModeMask as integer
        protected tempCanvas as object
        protected lastPoints as object
        protected triangles as object
        protected hulledPoints as object
        protected lastDrawMode as integer
        protected currentDrawLevel as integer
        protected minimumFrameRateTarget as integer
        protected maxDrawLevels as integer
        sub new(owner as object, canvasBitmap as object, points = [] as object, args = {} as object)
        end sub
        override sub addToScene(renderer as object)
        end sub
        override sub draw(additionalRotation = invalid as object)
        end sub
        ' Change the draw levels based on how long the last frame took to render
        ' If the last frame took longer than expected, increase the draw levels
        ' If the last frame took 1/2 as long as expected, decrease the draw levels
        private sub automaticallyAdjustDrawLevels()
        end sub
        private sub drawNextLevelOfPolygons()
        end sub
        ' Draw a filled triangle with rays from the apex ato the shortest side of the triangle
        '
        ' @param {object} [tri=[]] an array with 3 {x,y} points
        ' @param {integer} [levelOfDetail=1] LOD of the triangle - how filled in it should be
        ' @param {integer} [levelOffset=0] which step of teh fill should be done (0-levelOfDetail)
        protected sub fillTriangleWithRays(tri = [] as object, levelOfDetail = 1 as integer, levelOffset = 0 as integer)
        end sub
        ' Draw a triangle edges - uses outlineRGBA if drawOutline is true
        '
        ' @param {object} [tri=[]] an array with 3 {x,y} points
        protected sub drawTriangleEdges(tri as object)
        end sub
        ' Draw a filled convex polygon with rectangles
        '
        ' @param {object} [points=[]] an array of {x,y} points
        ' @param {integer} [levelOfDetail=1] How many steps it should take to get a crisp polygon
        ' @param {integer} [levelOffset=0] which step of the fill should be done (0-levelOfDetail)
        protected sub fillPolygonWithRectangles(points = [] as object, levelOfDetail = 1 as integer, levelOffset = 0 as integer)
        end sub
    end class
end namespace
