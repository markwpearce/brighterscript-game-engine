namespace BGE.UI
    ' Base Abstract class for all UI Elements
    class UiWidget extends BGE.GameEntity
        ' If position = "custom", then m.customX is horizontal position of this element from the parent position
        ' and m.customY is the vertical position of this element from the parent position (positive is down)
        public customPosition as boolean
        public customX as float
        public customY as float
        ' If customPosition is false, this dictates where horizontally in the container this element should go. Can be: "left", "center" or "right"
        public horizAlign as string
        ' as HorizAlignment = HorizAlignment.left
        ' If customPosition is false, this dictates where vertically in the container this element should go. Can be: "top", "center" or "bottom"
        public vertAlign as string
        'as VertAlignment = VertAlignment.top
        ' Width of the element
        public width as integer
        ' Height of the element
        public height as integer
        protected canvas as object
        public padding as object
        public margin as object
        sub new(game as object)
        end sub
        ' Function to get the value of the UI element
        '
        ' @return {dynamic} - the value of this element
        function getValue() as dynamic
        end function
        ' Method called each frame to draw any images of this entity
        '
        ' @param {object} [parent=invalid] - the parent of this Ui Element - will be an object with {x, y, width, height}
        sub draw(parent = invalid as object)
        end sub
        ' Set the canvas this UIWidgetDraws to
        '
        ' @param {object} [canvas=invalid] The canvas this should draw to - if invalid, then will draw to the game canvas
        sub setCanvas(canvas = invalid as object)
        end sub
        ' Method called each frame to reposition
        '
        ' @param {UiWidget} [parent=invalid] - the parent of this Ui Element - will be an object with {x, y, width, height}
        sub repositionBasedOnParent(parent = invalid as object)
        end sub
        ' Method called each frame to draw any images of this entity
        '
        ' @param {UiWidget} [parent=invalid] - the parent of this Ui Element
        ' @return {BGE.Math.Vector} - x,y coordinates of where this widget should be positioned
        protected function getWorldPosition(parent = invalid as object) as object
        end function
    end class
end namespace
