' @module BGE
namespace BGE
    ' TODO: figure this out... is useful for sprites with different size frames
    function TexturePacker_GetRegions(atlas as dynamic, bitmap as object) as object
    end function
    ' -----------------------Utilities Used By Game Engine---------------------------
    function ArrayInsert(array as object, index as integer, value as dynamic) as object
    end function
    sub DrawCircleOutline(draw2d as object, line_count as integer, x as float, y as float, radius as float, rgba as integer)
    end sub
    sub DrawRectangleOutline(draw2d as object, x as float, y as float, width as float, height as float, rgba as integer)
    end sub
    function isValidEntity(entity as object) as boolean
    end function
    ' 	' -------Button Code Reference--------
    ' 	' Button  Pressed Released  Held
    '   ' ------------------------------
    ' 	' Back         0      100   1000
    ' 	' Up           2      102   1002
    ' 	' Down         3      103   1003
    ' 	' Left         4      104   1004
    ' 	' Right        5      105   1005
    ' 	' OK           6      106   1006
    ' 	' Replay       7      107   1007
    ' 	' Rewind       8      108   1008
    ' 	' FastForward  9      109   1009
    ' 	' Options     10      110   1010
    ' 	' Play        13      113   1013
    function buttonNameFromCode(buttonCode as integer) as string
    end function
    ' Clone an array (shallow)
    '
    ' @param {object} [original=[]] the original array to be clones
    ' @return {object} A shallow copy of the original array
    function cloneArray(original = [] as object) as object
    end function
    ' Check if two arrays of points are teh same - that is, if each point, in order has same x and y values
    '
    ' @param {object} [a=[]] the first array
    ' @param {object} [b=[]] the second array
    ' @return {boolean} true if both arrays have same number of points and x and y values are the same for each point
    function pointArraysEqual(a = [] as object, b = [] as object) as boolean
    end function
    function isTrue(value) as boolean
    end function
end namespace
